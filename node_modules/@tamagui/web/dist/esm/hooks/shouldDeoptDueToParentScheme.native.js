import { Appearance } from "react-native";
function shouldDeoptDueToParentScheme(manager) {
  var _parents_, parents = (manager?.getParents() || []).reverse(), rootScheme = (_parents_ = parents[0]) === null || _parents_ === void 0 ? void 0 : _parents_.state.scheme;
  if (!rootScheme || Appearance.getColorScheme() !== rootScheme)
    return !0;
  var lastParentScheme = rootScheme, _iteratorNormalCompletion = !0, _didIteratorError = !1, _iteratorError = void 0;
  try {
    for (var _iterator = parents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
      var parent = _step.value;
      if (parent.state.scheme !== lastParentScheme)
        return !0;
      lastParentScheme = parent.state.scheme;
    }
  } catch (err) {
    _didIteratorError = !0, _iteratorError = err;
  } finally {
    try {
      !_iteratorNormalCompletion && _iterator.return != null && _iterator.return();
    } finally {
      if (_didIteratorError)
        throw _iteratorError;
    }
  }
  return !1;
}
export {
  shouldDeoptDueToParentScheme
};
//# sourceMappingURL=shouldDeoptDueToParentScheme.native.js.map
