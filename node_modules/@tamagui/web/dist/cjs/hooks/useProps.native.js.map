{
  "version": 3,
  "sources": ["../../../src/hooks/Users/n8/tamagui/code/core/web/src/hooks/useProps.tsx"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;mBAAkB,2BAClB,gBAA0B,sBAC1B,0BAAiC,yCACjC,wBAA+B,sCAC/B,iCAAwC,+CAExC,eAAsB,2BAEtB,2BAAkC,gCAClC,kBAAyB,uBACzB,kBAAkC;AAyB3B,SAASA,SACdC,OACAC,MAAsB;AAEtB,MAAM,CAACC,UAAUC,QAAAA,IAAYC,iBAAiBJ,OAAO;IACnD,GAAGC;IACHI,UAAU;IACVC,aAAa;IACbC,eAAe;EACjB,CAAA;AACA,SAAO;IACL,GAAGL;IACH,GAAGC;EACL;AACF;AAQO,SAASK,SACdR,OACAC,MAAsB;AAEtB,SAAOG,iBAAiBJ,OAAOC,IAAAA,EAAM,CAAA,KAAM,CAAC;AAC9C;AAQO,SAASG,iBACdJ,OACAC,MAAsB;MAEDA,oBAmBnBQ,mBAnBmBR,iCAAfS,gBAAeT,kCAAAA,QAAAA,SAAAA,qBAAAA,KAAMU,kBAAY,QAAlBV,uBAAAA,SAAAA,SAAAA,mBAAoBS,kBAAY,QAAhCT,oCAAAA,SAAAA,kCAAoCW,mBAAMF,cACzD,CAACD,YAAYI,KAAAA,QAASC,mCAAkB;IAC5CC,eAAeL,aAAaK;IAC5BC,MAAM,WAAWhB,QAAQA,MAAMa,QAAQI;IACvCC,SAAS,kBAAkBlB,QAAQA,MAAMmB,eAAeF;EAC1D,CAAA,GACMG,mBAAmBC,aAAAA,QAAMC,WAAWC,wCAAAA,GACpC,EAAEC,OAAOC,UAAUC,gBAAe,QAAKC,4CAC3C3B,OACAoB,kBACAV,kBACAkB,yBAAAA,CAAAA,GAGIC,iBAAaC,0BAAAA,GACbC,kBAAcC,sCAClBhC,OACAU,cACAG,SACAJ,oBAAAA,WAAWe,WAAK,QAAhBf,sBAAAA,SAAAA,SAAAA,kBAAkBO,SAAQ,IAC1BQ,OACA;IACES,YAAY;IACZJ;IACAK,QAAQ;IACRC,cAAc;IACdC,SAAS;IACT7B,eAAe;IACf,GAAGN;EACL,GACA,MACAmB,gBAAAA,GAGI,EAAEiB,aAAaC,aAAY,IAAKP;AAEtCV,sBAAAA,QAAMkB,UAAU,WAAA;AACd,QAAId,WAIJ;UAAID,MAAMgB,WAAW;AACnBd,wBAAgB;UAAEc,WAAW;QAAM,CAAA;AACnC;MACF;AAEA,iBAAOC,wDAAwB;QAC7BhB;QACAL;QACAM;QACAF;QACAa;QACAC;MACF,CAAA;;EACF,GAAG;IACDb;IACAa,eAAeI,OAAOC,KAAK;SAAIL;KAAa,EAAEM,KAAK,EAAA,IAAM;IACzDP,cAAcK,OAAOC,KAAK;SAAIN;KAAY,EAAEO,KAAK,EAAA,IAAM;GACxD,GAEM;IAACb,YAAYc;IAAWd,YAAYe,SAAS,CAAC;IAAGjC;IAAOgB;;AACjE;",
  "names": ["useProps", "props", "opts", "propsOut", "styleOut", "usePropsAndStyle", "noExpand", "noNormalize", "resolveValues", "useStyle", "themeState", "staticConfig", "forComponent", "Stack", "theme", "useThemeWithState", "componentName", "name", "undefined", "inverse", "themeInverse", "componentContext", "React", "useContext", "ComponentContext", "state", "disabled", "setStateShallow", "useComponentState", "getConfig", "mediaState", "useMedia", "splitStyles", "useSplitStyles", "isAnimated", "noSkip", "noMergeStyle", "noClass", "mediaGroups", "pseudoGroups", "useEffect", "unmounted", "subscribeToContextGroup", "Object", "keys", "join", "viewProps", "style"]
}
