"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var subscribeToContextGroup_exports = {};
__export(subscribeToContextGroup_exports, {
  subscribeToContextGroup: () => subscribeToContextGroup
});
module.exports = __toCommonJS(subscribeToContextGroup_exports);
var import_createShallowSetState = require("./createShallowSetState"), import_useMedia = require("../hooks/useMedia"), subscribeToContextGroup = function(param) {
  var { disabled = !1, setStateShallow, pseudoGroups, mediaGroups, componentContext, state } = param;
  if (pseudoGroups || mediaGroups) {
    var _componentContext_groups_subscribe, _componentContext_groups, current = {
      pseudo: {},
      media: {}
    };
    return process.env.NODE_ENV === "development" && !componentContext.groups && console.debug("No context group found"), (_componentContext_groups = componentContext.groups) === null || _componentContext_groups === void 0 || (_componentContext_groups_subscribe = _componentContext_groups.subscribe) === null || _componentContext_groups_subscribe === void 0 ? void 0 : _componentContext_groups_subscribe.call(_componentContext_groups, function(name, param2) {
      var { layout, pseudo } = param2;
      if (pseudo && (pseudoGroups != null && pseudoGroups.has(String(name))))
        Object.assign(current.pseudo, pseudo), persist();
      else if (layout && mediaGroups) {
        var mediaState = (0, import_useMedia.getMediaState)(mediaGroups, layout), next = (0, import_createShallowSetState.mergeIfNotShallowEqual)(current.media, mediaState);
        next !== current.media && (Object.assign(current.media, next), persist());
      }
      function persist() {
        var group = {
          ...state.group,
          [name]: current
        };
        setStateShallow({
          group
        });
      }
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  subscribeToContextGroup
});
//# sourceMappingURL=subscribeToContextGroup.js.map
