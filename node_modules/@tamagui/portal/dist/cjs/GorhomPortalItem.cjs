var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
    for (var name in all) __defProp(target, name, {
      get: all[name],
      enumerable: !0
    });
  },
  __copyProps = (to, from, except, desc) => {
    if (from && typeof from == "object" || typeof from == "function") for (let key of __getOwnPropNames(from)) !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, {
      get: () => from[key],
      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
    });
    return to;
  };
var __toCommonJS = mod => __copyProps(__defProp({}, "__esModule", {
  value: !0
}), mod);
var GorhomPortalItem_exports = {};
__export(GorhomPortalItem_exports, {
  GorhomPortalItem: () => GorhomPortalItem
});
module.exports = __toCommonJS(GorhomPortalItem_exports);
var import_react = require("react"),
  import_constants = require("./constants.cjs"),
  import_react_dom = require("react-dom");
const GorhomPortalItem = props => {
  if (!props.hostName) throw new Error("No name");
  const cur = import_constants.allPortalHosts.get(props.hostName),
    [node, setNode] = (0, import_react.useState)(cur);
  return cur && !node && setNode(cur), (0, import_react.useEffect)(() => {
    if (!props.hostName || node) return;
    const listener = node2 => {
      setNode(node2);
    };
    return import_constants.portalListeners[props.hostName] ||= /* @__PURE__ */new Set(), import_constants.portalListeners[props.hostName].add(listener), () => {
      import_constants.portalListeners[props.hostName]?.delete(listener);
    };
  }, [node]), node ? (0, import_react_dom.createPortal)(props.children, node) : null;
};